gc()
num.bins = 12
num.steps = 180/num.bins
bin.edges.left = seq(from = 0, to = 180, by = num.steps) #includes bin from left, but not right
bin.edges.left[1] = 1
bin.edges.left = c(0, bin.edges.left)
names(bin.edges.left)[1:10] = paste0("bin.0", c(0:9))
names(bin.edges.left)[11:length(bin.edges.left)] = paste0("bin.",c(11:length(bin.edges.left)-1))
find.hue.bin = function(x){
return(names(bin.edges.left)[max(which(x >= bin.edges.left))])
}
res$H.mode.binned = sapply(res$H.mode, find.hue.bin)
names(res)
head(res$week.day)
c("temp", "humidity", "wind","rain", "sky")
res[,c("temp", "humidity", "wind","rain", "sky"), with = FALSE]
naems(res)
names(res)
normalized.num.faces = function(df){
social.df = data.frame(num.rows = nrow(df),
num.faces.alt = sum(df$num_faces_alt), face.present.alt = length(which(df$num_faces_alt > 0)),
num.people.social.faces.alt = sum(df$num_faces_alt[which(df$num_faces_alt > 1)]),
solo.face.alt = length(which(df$num_faces_alt == 1)), social.face.alt = length(which(df$num_faces_alt > 1)),
num.faces.alt.tree = sum(df$num_faces_alt.tree), face.present.alt.tree = length(which(df$num_faces_alt.tree > 0)),
solo.face.alt.tree = length(which(df$num_faces_alt.tree == 1)), social.face.alt.tree = length(which(df$num_faces_alt.tree > 1)),
num.people.social.faces.alt.tree = sum(df$num_faces_alt.tree[which(df$num_faces_alt.tree > 1)]),
bin.0.count = length(which(df$H.mode.binned == "bin.00")), num.unique.images = length(unique(df$filename)),
num.unique.face.images.alt = length(unique(df$filename[which(df$num_faces_alt > 0)])),
num.unique.face.images.alt.tree = length(unique(df$filename[which(df$num_faces_alt.tree > 0)])))
return(cbind(social.df, df[1,c("temp", "humidity", "wind","rain", "sky")]))
}
as.data.frame(dt) %>%
group_by(city, month, week.day, hour) %>%
do(normalized.num.faces(.)) %>%
as.data.frame() -> social.df
as.data.frame(res) %>%
group_by(city, month, week.day, hour) %>%
do(normalized.num.faces(.)) %>%
as.data.frame() -> social.df
as.data.frame(res) %>%
group_by(city, season, week.day, hour) %>%
do(normalized.num.faces(.)) %>%
as.data.frame() -> social.df
as.data.frame(res) %>%
group_by(city, season, week.day, hour) %>%
do(normalized.num.faces(.)) %>%
as.data.frame() -> social.df
head(social.df)
head(social.df)
nrow(social.df)
names(social.df)
length(unique(social.df$city))
length(unique(social.df$season))
length(unique(social.df$week.day))
length(unique(social.df$hour))
write.csv(social.df, file = "./data/social_weather_aggs.csv", row.names = FALSE, quote = FALSE)
bleh = read.csv("~/Desktop/oscars_at_dolb_with_paths.csv", header = TRUE)
head(bleh)
bins = as.data.frame(table(bleh$bin))
bins
library(ggplot2)
ggplot(bins, aes(x = Var1, Freq)) + geom_point()
unique(bleh$bin)
length(unique(bleh$bin))
range(bleh$bin)
head(bleh)
?rep
rep("/Users/myazdaniUCSD/Desktop/black-thumb.png", 3)
fake.df = data.frame(filename = rep("/Users/myazdaniUCSD/Desktop/black-thumb.png", 100), bin = c(1:100), hour = -1)
new.df = rbind(bleh, fake.df)
head(new.df)
tail(new.df)
write.csv(new.df, file = "~/Desktop/shuffled.csv", header = TRUE, row.names = FALSE)
write.csv(new.df, file = "~/Desktop/shuffled.csv", QUOTE = TRUE, row.names = FALSE)
write.csv(new.df, file = "~/Desktop/shuffled.csv", QUOTE = FALSE, row.names = FALSE)
write.csv(new.df, file = "~/Desktop/shuffled.csv", quote = FALSE, row.names = FALSE)
source('~/Documents/twitter-diurnal-analysis/scripts/analysis/1-weather_and_faces_DT.R')
head(social.df)
names(social.df)
m.num.faces.alt <- glm(num.faces.alt ~ city + season + week.day + hour + num.rows +
temp + humidity + wind + rain + sky, family="poisson", data=social.df)
summary(m.num.faces.alt)
class(social.df$humidity)
unique(social.df$humidity)
social.df$humidity[which(social.df$humidity == "M")] = "NA"
as.numeric(unique(social.df$humidity))
social.df = read.csv("./data/social_weather_aggs.csv", header = TRUE, stringsAsFactors = FALSE)
social.df$humidity[which(social.df$humidity == "M")] = NA
unique(social.df$humidity)
as.numeric(unique(social.df$humidity))
social.df$humidity = as.numeric(social.df$humidity)
class(social.df$temp)
unique(social.df$temp)
unique(social.df$wind)
unique(social.df$rain)
unique(social.df$sky)
m.num.faces.alt <- glm(num.faces.alt ~ city + season + week.day + hour + num.rows +
temp + humidity + wind + rain + sky, family="poisson", data=social.df)
summary(m.num.faces.alt)
?glm
m.num.faces.alt <- glm(num.faces.alt ~ city + season + week.day + hour + num.rows +
temp + humidity + wind + rain + sky, family="gaussian", data=social.df)
summary(m.num.faces.alt)
coeff(summary(m.num.faces.alt))
coef(summary(m.num.faces.alt))
write.csv(coef(summary(m.num.faces.alt)), file = "~/Dropbox/TwitterPaper/results/weather-faces/coefficients/num_alt_faces.csv", row.names = FALSE, quote = FALSE)
names(social.df)
?formula
independent.vars = "city + season + week.day + hour + num.rows +
temp + humidity + wind + rain + sky"
dependent.var = "num.faces.alt ~ "
as.formula(paste0(dependent.var, independent.vars))
as.formula(paste(dependent.var, "~",independent.vars))
model.faces = function(dependent.var, filename){
poisson.model = glm(as.formula(paste(dependent.var, "~",independent.vars)), family="poisson", data=social.df)
write.csv(coef(summary(poisson.model)),
file = paste0("~/Dropbox/TwitterPaper/results/weather-faces/coefficients/", filename, ".csv"),
row.names = FALSE, quote = FALSE)
}
names(df)
names(social.df)
dependent.vars = names(social.df)[6:10]
dependent.var
dependent.vars
dependent.vars[1]
?gsub
gsub(".", "_" ,dependent.vars[1])
gsub("\.", "_" ,dependent.vars[1])
gsub("/.", "_" ,dependent.vars[1])
gsub("//.", "_" ,dependent.vars[1])
gsub("\\.", "_" ,dependent.vars[1])
rm(dependent.var)
for (i in c(1:length(dependent.vars))){
print(paste("working on", dependent.vars[i]))
model.faces(dependent.vars[i], gsub("\\.", "_", dependent.vars[i]))
}
model.faces = function(dependent.var, filename){
poisson.model = glm(as.formula(paste(dependent.var, "~",independent.vars)), family="poisson", data=social.df)
write.csv(coef(summary(poisson.model)),
file = paste0("~/Dropbox/TwitterPaper/results/weather-faces/coefficients/", filename, ".csv"),
row.names = TRUE, quote = FALSE)
}
dependent.vars = names(social.df)[6:10]
for (i in c(1:length(dependent.vars))){
print(paste("working on", dependent.vars[i]))
model.faces(dependent.vars[i], gsub("\\.", "_", dependent.vars[i]))
}
social.df$hour = as.factor(social.df$hour)
for (i in c(1:length(dependent.vars))){
print(paste("working on", dependent.vars[i]))
model.faces(dependent.vars[i], gsub("\\.", "_", dependent.vars[i]))
}
names(df)
names(social.df)
dependent.vars
independent.vars
head(social.df)
unique(social.df$sky)
table(social.df$season)
table(social.df$sky)
names(social.df$rain)
unique(social.df$rain)
dt.weather = fread("~/Dropbox/TwitterPaper/data/US_HSV_modes_top60_cities_weather.csv", header = TRUE)
dt = fread("./data/Top_60_faces_alt_and_alt_tree_HSV_modes.csv", header = TRUE)
## HSV_modes_variability_computation.R
##
## compute the variability within days and across days of HSV modes
## using formulations from Naaman et. al 2012
##
setwd("~/Documents/twitter-diurnal-analysis/")
library(data.table)
library(dplyr)
library(ggplot2)
library(plotly)
library(reshape)
dt = fread("./data/Top_60_faces_alt_and_alt_tree_HSV_modes.csv", header = TRUE)
dt$day = as.Date(dt$postedTime)
dt$week.day = weekdays(dt$day)
##----------------------------------------------------------------
##
## merge with weather
##
##----------------------------------------------------------------
dt.weather = fread("~/Dropbox/TwitterPaper/data/US_HSV_modes_top60_cities_weather.csv", header = TRUE)
setkey(dt.weather, image.path)
setkey(dt, file_path)
dt.just.weather = dt.weather[,setdiff(names(dt.weather), names(dt)), with = FALSE]
rm(dt.weather)
gc()
res = unique(dt[dt.just.weather])
rm(dt)
rm(dt.just.weather)
gc()
dt = fread("~/Documents/twitter_data_grant/data/US_country_query_2013_locations.csv", header = TRUE)
?sample
sample(nrow(dt), 5)
dt[sample(nrow(dt), 5),]
ggplot(dt[sample(nrow(dt), 200000),], aes(x = lon, y = lat)) + geom_point(alpha = .5)
california = subset(dt, lon > -130 & lon  < -100)
dim(california)
names(dt)
head(dt)
source('~/Documents/twitter-diurnal-analysis/scripts/dataManip/boston_bombings.R')
nrow(dt)
unique(dt$city)
?list.files
images = list.files("~/Documents/twitter_data_grant/images/boston_bombin/", full.names = TRUE)
names(dt)
boston.bombing = susbet(dt, filename %in% images)
boston.bombing = subset(dt, filename %in% images)
nrow(boston.bombing)
class(boston.bombing$filename)
images = list.files("~/Documents/twitter_data_grant/images/boston_bombin/", full.names = FALSE)
boston.bombing = subset(dt, filename %in% images)
nrow(boston.bombing)
unique(boston.bombing$day)
names(boston.bombing)
days.to.study = unique(boston.bombing$day)
for (i in c(1:length(days.to.study))){
boston.day = subset(boston.bombing, day == days.to.study[i])
write.csv(boston.day[,c("filename", "hour", "H.mode")], file = paste0("~/Desktop/boston-",days.to.study[i])), row.names = FALSE, quote = FALSE)
}
for (i in c(1:length(days.to.study))){
boston.day = subset(boston.bombing, day == days.to.study[i])
write.csv(boston.day[,c("filename", "hour", "H.mode")], file = paste0("~/Desktop/boston-",days.to.study[i]), row.names = FALSE, quote = FALSE)
}
for (i in c(1:length(days.to.study))){
boston.day = subset(boston.bombing, day == days.to.study[i])
write.csv(boston.day[,c("filename", "hour", "H.mode"), with = FALSE], file = paste0("~/Desktop/boston-",days.to.study[i]), row.names = FALSE, quote = FALSE)
}
head(boston.day)
nrow(boston.day)
boston.day[,c("filename", "hour", "H.mode"), with = FALSE]
for (i in c(1:length(days.to.study))){
boston.day = subset(boston.bombing, day == days.to.study[i])
write.csv(boston.day[,c("filename", "hour", "H.mode"), with = FALSE], file = paste0("~/Desktop/boston-",days.to.study[i], ".csv"), row.names = FALSE, quote = FALSE)
}
for (i in c(1:length(days.to.study))){
boston.day = subset(boston.bombing, day == days.to.study[i])
boston.day$filename = paste0("~/Documents/twitter_data_grant/images/boston_bombin/", boston.day$filename)
write.csv(boston.day[,c("filename", "hour", "H.mode"), with = FALSE], file = paste0("~/Desktop/boston-",days.to.study[i], ".csv"), row.names = FALSE, quote = FALSE)
}
for (i in c(1:length(days.to.study))){
boston.day = subset(boston.bombing, day == days.to.study[i])
boston.day$filename = paste0("~/Documents/twitter_data_grant/images/boston_bombin/", boston.day$filename)
boston.day = rbind(data.frame(filename = rep("~/Desktop/black-thumb.png", 24)), hour = c(0:23), H.mode = -1)
write.csv(boston.day[,c("filename", "hour", "H.mode"), with = FALSE], file = paste0("~/Desktop/boston-",days.to.study[i], ".csv"), row.names = FALSE, quote = FALSE)
}
for (i in c(1:length(days.to.study))){
boston.day = subset(boston.bombing, day == days.to.study[i])
boston.day$filename = paste0("~/Documents/twitter_data_grant/images/boston_bombin/", boston.day$filename)
boston.day = rbind(data.frame(filename = rep("~/Desktop/black-thumb.png", 24)), hour = c(0:23), H.mode = -1), boston.day)
write.csv(boston.day[,c("filename", "hour", "H.mode"), with = FALSE], file = paste0("~/Desktop/boston-",days.to.study[i], ".csv"), row.names = FALSE, quote = FALSE)
}
for (i in c(1:length(days.to.study))){
boston.day = subset(boston.bombing, day == days.to.study[i])
boston.day$filename = paste0("~/Documents/twitter_data_grant/images/boston_bombin/", boston.day$filename)
boston.day = rbind(data.frame(filename = rep("~/Desktop/black-thumb.png", 24), hour = c(0:23), H.mode = -1), boston.day)
write.csv(boston.day[,c("filename", "hour", "H.mode"), with = FALSE], file = paste0("~/Desktop/boston-",days.to.study[i], ".csv"), row.names = FALSE, quote = FALSE)
}
for (i in c(1:length(days.to.study))){
boston.day = subset(boston.bombing, day == days.to.study[i])
boston.day$filename = paste0("~/Documents/twitter_data_grant/images/boston_bombin/", boston.day$filename)
boston.day = rbind(data.frame(filename = rep("~/Desktop/black-thumb.png", 24), hour = c(0:23), H.mode = -1), boston.day[,c("filename", "hour", "H.mode"), with = FALSE])
write.csv(boston.day, file = paste0("~/Desktop/boston-",days.to.study[i], ".csv"), row.names = FALSE, quote = FALSE)
}
?write.csv
for (i in c(1:length(days.to.study))){
boston.day = subset(boston.bombing, day == days.to.study[i])
boston.day$filename = paste0("~/Documents/twitter_data_grant/images/boston_bombin/", boston.day$filename)
boston.day = rbind(data.frame(filename = rep("~/Desktop/black-thumb.png", 24), hour = c(0:23), H.mode = -1), boston.day[,c("filename", "hour", "H.mode"), with = FALSE])
write.csv(boston.day, file = paste0("~/Desktop/boston-",days.to.study[i], ".csv"), row.names = FALSE, quote = FALSE, col.names = FALSE)
}
for (i in c(1:length(days.to.study))){
boston.day = subset(boston.bombing, day == days.to.study[i])
boston.day$filename = paste0("~/Documents/twitter_data_grant/images/boston_bombin/", boston.day$filename)
boston.day = rbind(data.frame(filename = rep("~/Desktop/black-thumb.png", 24), hour = c(0:23), H.mode = -1), boston.day[,c("filename", "hour", "H.mode"), with = FALSE])
write.table(boston.day, file = paste0("~/Desktop/boston-",days.to.study[i], ".csv"), sep = ",", row.names = FALSE, quote = FALSE, col.names = FALSE)
}
for (i in c(1:length(days.to.study))){
boston.day = subset(boston.bombing, day == days.to.study[i])
boston.day$filename = paste0("/Users/myazdaniUCSD/Documents/twitter_data_grant/images/boston_bombin/", boston.day$filename)
boston.day = rbind(data.frame(filename = rep("/Users/myazdaniUCSD/Desktop/black-thumb.png", 24), hour = c(0:23), H.mode = -1), boston.day[,c("filename", "hour", "H.mode"), with = FALSE])
write.table(boston.day, file = paste0("~/Desktop/boston-",days.to.study[i], ".csv"), sep = ",", row.names = FALSE, quote = FALSE, col.names = FALSE)
}
## aggregate_faces.R
##
## find summary statistics for face data
setwd("~/Documents/twitter-diurnal-analysis/")
library(data.table)
library(dplyr)
library(ggplot2)
library(plotly)
library(reshape)
dt = fread("./data/Top_60_faces_alt_and_alt_tree_HSV_modes.csv", header = TRUE)
cities.gps = read.csv("~/Desktop/boundbox_US_top_60.csv", header = TRUE, stringsAsFactors = FALSE)
get.correct.day = function(i){
x = as.POSIXct(strptime(dt$postedTime[i], format = "%Y-%m-%dT%H:%M:%S"), tz = "GMT")
tz.str = cities.gps[which(cities.gps$city == dt$city[i]),"time.zone"]
return(as.IDate(format(x, tz = tz.str)))
}
dt$day = do.call("c", lapply(c(1:nrow(dt)), get.correct.day))
unique(dt$city)
dt = subset(dt, city == "San Diego")
unique(dt$city)
dt$day = do.call("c", lapply(c(1:nrow(dt)), get.correct.day))
dt$week.day = weekdays(dt$day)
head(dt)
gaslamp.gps = data.frame(lon = -117.159167, lat = 32.711667)
city.subset = function(df, com.mode){
city.subset = subset(df, lat > (com.mode$lat - bbox_radius) & lat < (com.mode$lat + bbox_radius) & lon > (com.mode$lon - bbox_radius) & lon < (com.mode$lon + bbox_radius))
return(city.subset)
}
gaslamp.dt = city.subset(dt, gaslamp.gps)
bbox_radius = .01
gaslamp.dt = city.subset(dt, gaslamp.gps)
nrow(gaslamp.dt)
northpark.gps = data.frame(lat = 32.740831, lon = -117.129719)
northpark.dt = city.subset(dt,northpark.gps)
nrow(northpark.dt)
names(northpark.dt)
table(northpark.dt$week.day)
week.ends = c("Friday", "Saturday", "Sunday")
dt = dt[week.day %in% week.ends]
unique(dt$week.day)
gaslamp.gps = data.frame(lon = -117.159167, lat = 32.711667)
gaslamp.dt = city.subset(dt, gaslamp.gps)
northpark.gps = data.frame(lat = 32.740831, lon = -117.129719)
northpark.dt = city.subset(dt,northpark.gps)
table(northpark.dt$week.day)
?mutate
names(dt)
shift.hours = function(df){
if (df$week.day[1] == "Friday"){
shift.amount = 0
}
if (df$week.day[1] == "Saturday"){
shift.amount = 24
}
if (df$week.day[1] == "Sunday"){
shift.amount = 48
}
df$hour = df$hour + shift.amount
return(df)
}
as.data.frame(dt) %>%
group_by(week.day) %>%
do(shift.hours(.)) %>%
as.data.frame() -> dt.shifted.hours
head(dt.shifted.hours)
unique(dt.shifted.hours$hour)
gaslamp.gps = data.frame(lon = -117.159167, lat = 32.711667)
gaslamp.dt = city.subset(dt, gaslamp.gps)
northpark.gps = data.frame(lat = 32.740831, lon = -117.129719)
northpark.dt = city.subset(dt,northpark.gps)
head(northpark.dt)
rm(dt)
gc()
gaslamp.gps = data.frame(lon = -117.159167, lat = 32.711667)
gaslamp.dt = city.subset(dt.shifted.hours, gaslamp.gps)
northpark.gps = data.frame(lat = 32.740831, lon = -117.129719)
northpark.dt = city.subset(dt.shifted.hours,northpark.gps)
head(northpark.dt)
tail(northpark.dt)
table(northpark.dt$hour)
bleh = as.data.frame(table(northpark.dt$hour))
library(ggplot2)
head(bleh)
ggplot(bleh, aes(x = Var1, y = Freq)) + geom_point()
bleh = as.data.frame(table(gaslamp.dt$hour))
ggplot(bleh, aes(x = Var1, y = Freq)) + geom_point()
nrow(gaslamp.dt)
head(gaslamp.dt)
haed(northpark.dt)
head(northpark.dt)
head(northpark.dt[,c"(file_path", "hour", "H.mode"])
head(northpark.dt[,c("file_path", "hour", "H.mode"])
head(northpark.dt[,c("file_path", "hour", "H.mode")])
write.csv(northpark.dt[,c("file_path", "hour", "H.mode")], file = "~/Desktop/north_park.csv", row.names = FALSE, quote = FALSE)
write.csv(gaslamp.dt[,c("file_path", "hour", "H.mode")], file = "~/Desktop/gaslamp.csv", row.names = FALSE, quote = FALSE)
unique(northpark.dt$hour)
length(unique(northpark.dt$hour))
data.frame(file_path = rep( , length(c(0:71))), hour = c(0:71), H.mode = -1)
data.frame(file_path = rep("bleh" , length(c(0:71))), hour = c(0:71), H.mode = -1)
bleh= rbind(northpark.dt[,c("file_path", "hour", "H.mode")], data.frame(file_path = rep("/home/myazdani/Documents/twitter_projects/image_subsets/black-thumb.png", length(c(0:71))), hour = c(0:71), H.mode = -1))
head(bleh)
tail(bleh)
northpark.dt = rbind(northpark.dt[,c("file_path", "hour", "H.mode")], data.frame(file_path = rep("/home/myazdani/Documents/twitter_projects/image_subsets/black-thumb.png", length(c(0:71))), hour = c(0:71), H.mode = -1))
gaslamp.dt = rbind(gaslamp.dt[,c("file_path", "hour", "H.mode")], data.frame(file_path = rep("/home/myazdani/Documents/twitter_projects/image_subsets/black-thumb.png", length(c(0:71))), hour = c(0:71), H.mode = -1))
write.csv(northpark.dt, file = "~/Desktop/north_park.csv", row.names = FALSE, quote = FALSE)
write.csv(gaslamp.dt, file = "~/Desktop/gaslamp.csv", row.names = FALSE, quote = FALSE)
## subset_by_city_COM.R
##
## find center of mass of gps points using mode and
##
setwd("~/Documents/twitter-diurnal-analysis/")
library(data.table)
library(dplyr)
library(ggplot2)
library(plotly)
library(reshape)
dt = fread("./data/Top_60_faces_alt_and_alt_tree_HSV_modes.csv", header = TRUE)
Mode <- function(x) {
ux <- unique(x)
ux[which.max(tabulate(match(x, ux)))]
}
as.data.frame(dt) %>%
group_by(city) %>%
do(compute.com(.)) %>%
as.data.frame() -> cities.com
##------------------------------------------------------------------------------
##
## extract city subsets based on COM
##
##------------------------------------------------------------------------------
bbox_radius = .01
city.subset = function(df){
com.mode = data.frame(lon = Mode(round(df$lon,2)), lat = Mode(round(df$lat,2)))
city.subset = subset(df, lat > (com.mode$lat - bbox_radius) & lat < (com.mode$lat + bbox_radius) & lon > (com.mode$lon - bbox_radius) & lon < (com.mode$lon + bbox_radius))
return(city.subset)
}
as.data.frame(dt) %>%
group_by(city) %>%
do(city.subset(.)) %>%
as.data.frame() -> cities.com.subsets
as.data.frame(table(cities.com.subsets$city)) -> cities.fr
top.20 = as.character(cities.fr[order(cities.fr$Freq, decreasing = TRUE)[c(1:20)], "Var1"])
top.20.cities = subset(cities.com.subsets, city %in% top.20)
head(top.20.cities)
table(top.20.cities$city)
rm(dt)
gc()
dt = top.20.cities
cities.gps = read.csv("~/Desktop/boundbox_US_top_60.csv", header = TRUE, stringsAsFactors = FALSE)
get.correct.day = function(i){
x = as.POSIXct(strptime(dt$postedTime[i], format = "%Y-%m-%dT%H:%M:%S"), tz = "GMT")
tz.str = cities.gps[which(cities.gps$city == dt$city[i]),"time.zone"]
return(as.IDate(format(x, tz = tz.str)))
}
dt$day = do.call("c", lapply(c(1:nrow(dt)), get.correct.day))
head(dt)
dt$week.day = weekdays(dt$day)
shift.hours = function(df){
if (df$week.day[1] == "Sunday"){
shift.amount = 0
}
if (df$week.day[1] == "Monday"){
shift.amount = 1*24
}
if (df$week.day[1] == "Tuesday"){
shift.amount = 2*24
}
if (df$week.day[1] == "Wednesday"){
shift.amount = 3*24
}
if (df$week.day[1] == "Thursday"){
shift.amount = 4*24
}
if (df$week.day[1] == "Friday"){
shift.amount = 5*24
}
if (df$week.day[1] == "Saturday"){
shift.amount = 6*24
}
df$hour = df$hour + shift.amount
return(df)
}
as.data.frame(dt) %>%
group_by(week.day) %>%
do(shift.hours(.)) %>%
as.data.frame() -> dt.shifted.hours
rm(dt)
gc()
head(dt.shifted.hours)
head(dt.shifted.hours)
table(dt.shifted.hours$city)
setwd("~/Documents/twitter-diurnal-analysis/")
names(dt.shifted.hours)
?write.table
write_results = function(df){
path = "./"
filename = paste0(path, df$city[1], "_com.csv")
phony.df = data.frame(file_path =
rep("/home/myazdani/Documents/twitter_projects/image_subsets/black-thumb.png", unique(df$hour),
hour = unique(df$hour), H.mode = -1)
write.table(rbind(df[,c("file_path", "hour", "H.mode")], phony.df), file = filename, quote = FALSE, sep = ",", col.names= FALSE, row.name = FALSE)
}
write_results = function(df){
path = "./"
filename = paste0(path, df$city[1], "_com.csv")
phony.df = data.frame(file_path =
rep("/home/myazdani/Documents/twitter_projects/image_subsets/black-thumb.png", unique(df$hour)),
hour = unique(df$hour), H.mode = -1)
write.table(rbind(df[,c("file_path", "hour", "H.mode")], phony.df), file = filename, quote = FALSE, sep = ",", col.names= FALSE, row.name = FALSE)
}
dt.shifted.hours %>%
group_by(city) %>%
do(write_results(.))
unique(dt.shifted.hours$hour)
class(unique(dt.shifted.hours$hour))
write_results = function(df){
path = "./"
filename = paste0(path, df$city[1], "_com.csv")
phony.df = data.frame(file_path =
rep("/home/myazdani/Documents/twitter_projects/image_subsets/black-thumb.png", length(unique(df$hour))),
hour = unique(df$hour), H.mode = -1)
write.table(rbind(df[,c("file_path", "hour", "H.mode")], phony.df), file = filename, quote = FALSE, sep = ",", col.names= FALSE, row.name = FALSE)
}
dt.shifted.hours %>%
group_by(city) %>%
do(write_results(.))
unique(dt.shifted.hours$city)
